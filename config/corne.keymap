/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&nice_view_spi { cs-gpios = <&pro_micro 8 GPIO_ACTIVE_HIGH>; };

/ {
    combos {
        compatible = "zmk,combos";

        process {
            bindings = <&newProcess>;
            key-positions = <10 4>;
        };
    };

    macros {
        newProcess: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp P &kp LS(P) &kp R &kp O &kp C &kp SPACE &kp COLON &kp SPACE &kp P &kp R &kp O &kp C &kp E &kp S &kp S &kp LPAR &kp LS(C) &kp LS(L) &kp LS(K) &kp COMMA &kp SPACE &kp LS(R) &kp LS(S) &kp LS(T) &kp RPAR &kp SPACE &kp I &kp S &kp RET &kp B &kp E &kp G &kp I &kp N &kp RET &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp I &kp F &kp SPACE &kp LPAR &kp LS(R) &kp LS(S) &kp LS(T) &kp SPACE &kp EQUAL &kp SPACE &kp SQT &kp N1 &kp SQT &kp RPAR &kp SPACE &kp T &kp H &kp E &kp N &kp RET &kp RET &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp E &kp L &kp S &kp E &kp RET &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp I &kp F &kp SPACE &kp R &kp I &kp S &kp I &kp N &kp G &kp UNDER &kp E &kp D &kp G &kp E &kp LPAR &kp LS(C) &kp LS(L) &kp LS(K) &kp RPAR &kp SPACE &kp T &kp H &kp E &kp N &kp RET &kp RET &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp E &kp N &kp D &kp SPACE &kp I &kp F &kp SEMI &kp RET &kp RET &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp E &kp N &kp D &kp SPACE &kp I &kp F &kp SEMI &kp RET &kp RET &kp E &kp N &kp D &kp SPACE &kp P &kp R &kp O &kp C &kp E &kp S &kp S &kp SEMI>;
            label = "NEW_MACRO";
            wait-ms = <200>;
            tap-ms = <60>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans         &kp Q  &kp W  &kp E     &kp R  &kp T                 &kp Y    &kp U  &kp I       &kp O    &kp P     &trans
&mt LSHFT TAB  &kp A  &kp S  &kp D     &kp F  &kp G                 &kp H    &kp J  &kp K       &kp L    &kp SEMI  &mt RIGHT_SHIFT SQT
&kp LCTRL      &kp Z  &kp X  &kp C     &kp V  &kp B                 &kp N    &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp ESC
                             &kp LGUI  &mo 1  &mt LEFT_ALT SPACE    &kp RET  &mo 2  &lt 3 RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F12  &kp F7  &kp F8    &kp F9  &trans       &kp ASTERISK  &kp N7        &kp N8        &kp N9        &kp MINUS  &kp BSPC
&trans  &kp F11  &kp F4  &kp F5    &kp F6  &trans       &kp SLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &kp ENTER
&trans  &kp F10  &kp F1  &kp F2    &kp F3  &trans       &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans     &trans
                         &kp LGUI  &trans  &kp SPACE    &kp RET       &mo 4         &kp N0
            >;

            label = "F&NUM_PAD";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %   |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |      |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |      |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | BSPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp LPAR  &kp RPAR  &kp ASTRK  &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH   &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE   &kp TILDE
                          &kp LGUI  &mo 4     &kp BSPC     &kp RET    &trans     &kp RALT
            >;

            label = "SYMBOLS";
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_UP    &kp HOME  &kp UP_ARROW  &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &trans    &trans        &trans     &trans  &trans
                        &trans  &trans  &trans    &trans         &trans    &trans
            >;

            label = "NAVIGATION";
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
                              &trans        &trans        &trans        &trans  &trans  &trans
            >;

            label = "BLUETOOTH";
        };
    };
};
